#cloud-config

hostname: ${NODE_HOST}

coreos:
  update:
    reboot-strategy: "off"

  units:
  # Prevent upgrades
  - name: update-engine.service
    command: stop
  - name: locksmithd.service
    command: stop

  # Start kubelet
  - name: kubelet.service
    runtime: true
    command: start
    content: |
      [Service]
      ExecStart=/opt/bin/kubelet \
        --hostname-override=${IP_ADDRESS} \
        --cni-conf-dir=/etc/cni/net.d \
        --network-plugin=cni \
        --allow-privileged=true \
        --pod-manifest-path=/etc/kubernetes/manifests \
        --cluster-dns=${DNS_SERVICE_IP} \
        --cluster-domain=cluster.local \
        --require-kubeconfig=true \
        --kubeconfig=/etc/kubernetes/node-kubeconfig.yaml \
        --tls-cert-file=/etc/kubernetes/ssl/kubelet.pem \
        --tls-private-key-file=/etc/kubernetes/ssl/kubelet-key.pem \
        --cloud-config=/etc/kubernetes/cloud_config \
        --cloud-provider=vsphere
      Restart=always
      RestartSec=10
      [Install]
      WantedBy=multi-user.target

users:
  - name: core
    ssh-authorized-keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeYQTNpJvkYMivwERHWAWMNJhkrG4zHaqTAGQGlRioyr9VwL2e+Sj8MWFrCT7mLcxBjwsaeVc//ZNZoprzNdR3xJ4Y+3Pl3idaUSSBlu8RTn/Kb7hlvo6Bu0SP3z48kuSJB2obRKXjCy+Kdds67haxi/WmSNvpkM3UET8gqIw8OB2qZv3dbiYiinE/+z/jyt2sgl7Y7Ifgo3L9Vf1nmJmzjZFavilV3QBvaCsjexP3NJnOTdbg36EHZE6ahotEfmdScuPBRwJ8fpOqKsdYZvRHYB+KW6bhpqs4gjNsCuY24CyMQcV006vBXjFkNiT7WnNikVU4Ai+EHENtaHGZLfaL op"

  - name: nessus
    no-user-group: true
    ssh-authorized-keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCf/F4YZLvcbDIANRIWC4+aDdMSJNZ8TTmqzsDdeKox8eANfNMZ89W/UrfmGMNwxk6lsVzdUyvd8OS19orYyKOjhlKPoY+0tU/b75jXA2lAesyqqVhTHSaOwUJN+98k3vxzfMmOJDLW+z/HBOkFjrWTwc2SVhtjjLau1VOSJ7StaOXHJ7DyBf2OAMdcyBGOc3BcVpZS3tq9T97qF1fG+OkEdjYWa9oXwy901VEG5r/6xSes8U59rbtz/fL8yBVzsh9lRSN5QhEGNUXIUoUZJbl1Fy4Wmsz4DGNaEQ5PJp8vzRLTjVOp+LsTFAa866P0v+M/J/PRnY010x+lHh9PyKRQ8e+bxyTFmAZFhlaxHb9V1/xX35aAYj2ENxXbv7lYbuDnDbPlyFCxXnZP0DvxQo6gaNJr8X0XorUpFWAb1QuQUF5XzuCn4HHgJpxnlNCT+jCEGyjc+m+8MyN3KfcRelhcE/ugfxAUWp69rI1rEkUzw4VR9DAV4lcAvwa5skwMW8hDvRATAvYvhVbhs3yPel+OjlRddsUFHjiaRJ5Oo/Osdq7TGQRxIr3/z+t+3olyPe9vRg0/gwv8XSVSn7VmLC1MKTdIaDZGcdtKI7gH2sx+ks3Hwp+0KIX4iNh8SYVbUYubvkmrbqQVLwiR0C3bT4+rD3A/UpXwDtaA3PzwU1Wblw== nessus"

write_files:
- path: /etc/kubernetes/cni/docker_opts_cni.env
  content: |
    DOCKER_OPT_BIP=""
    DOCKER_OPT_IPMASQ=""

- path: /opt/bin/downloadcheck
  permissions: "0777"
  content: |
    #!/bin/bash
    md5sum=\$1
    url=\$2
    name=\$3
    gunzip=\$4
    temp_file=\$(mktemp)
    echo "Downloading \$url (\$gunzip)"
    curl --fail -L -o \$temp_file \$url
    if [ 0 -eq $? ]; then
      # md5 check
      if [ "\$md5sum" = \$(sha256sum \$temp_file | cut -d " " -f1) ]
      then
        echo "Checksum for \$1 was correct"
      else
        echo "Checksum for \$1 was incorrect"
        exit 1
      fi
      if [ \$gunzip == "1" ]; then
        echo "Unzipping \$temp_file > \$name"
        gunzip -d - < \$temp_file > \$name
        rm \$temp_file
      else
        echo "Moving \$temp_file > \$name"
        mv \$temp_file \$name
      fi
    else
      exit 1
    fi

# Configure private docker registry credentials
- path: /.docker/config.json
  content: |
    {
          "auths": {
                  "https://packages.dns.ad.zopa.com:5002": {
                          "auth": "${PACKAGES_AUTH_TOKEN}",
                          "email": "${PACKAGES_AUTH_EMAIL}"
                  }
          }
    }

# Configure hosts
- path: /etc/hosts
  content: |
    127.0.0.1 ${NODE_HOST} ${NODE_NAME}

- path: /etc/kubernetes/node-kubeconfig.yaml
  content: |
    apiVersion: v1
    kind: Config
    clusters:
    - name: ${CLUSTER_NAME}
      cluster:
        certificate-authority: /etc/kubernetes/ssl/ca.pem
        server: https://${TEMP_MASTER_IP}
    contexts:
    - context:
        cluster: ${CLUSTER_NAME}
        user: kubelet
      name: kubelet-context
    users:
    - name: kubelet
      user:
        client-certificate: /etc/kubernetes/ssl/kubelet.pem
        client-key: /etc/kubernetes/ssl/kubelet-key.pem
    current-context: kubelet-context

- path: /opt/bin/certdump
  permissions: "0777"
  content: |
    #!/bin/bash
    echo "\$3" > \$1
    chown \$2 \$1

- path: /etc/vault/vault-tls-generation/etcd-peer-template.tmpl
  content: |
    {{ with secret "${CLUSTER_NAME}-etcd-pki/issue/member" "common_name=${NODE_HOST}" "ip_sans=${IP_ADDRESS}" }}
    {{ .Data.serial_number }}
    {{ .Data.issuing_ca | plugin "/opt/bin/certdump" "/etc/ssl/etcd/ca.pem" "root" }}
    {{ .Data.certificate | plugin "/opt/bin/certdump" "/etc/ssl/etcd/peer.pem" "root" }}
    {{ .Data.private_key | plugin "/opt/bin/certdump" "/etc/ssl/etcd/peer-key.pem" "root" }}
    {{ end }}

- path: /etc/vault/vault-tls-generation/k8s-kubelet-template.tmpl
  content: |
    {{ with secret "${CLUSTER_NAME}-k8s-pki/issue/kubelet" "common_name=kubelet" }}
    {{ .Data.serial_number }}
    {{ .Data.issuing_ca | plugin "/opt/bin/certdump" "/etc/kubernetes/ssl/ca.pem" "root" }}
    {{ .Data.certificate | plugin "/opt/bin/certdump" "/etc/kubernetes/ssl/kubelet.pem" "root" }}
    {{ .Data.private_key | plugin "/opt/bin/certdump" "/etc/kubernetes/ssl/kubelet-key.pem" "root" }}
    {{ end }}

- path: /etc/vault/vault-tls-generation/k8s-cloud-config-template.tmpl
  content: |
    [Global]
    {{ with secret "${CLUSTER_NAME}-k8s-secret/vsphere" }}
    {{range \$k, \$v := .Data}}{{\$k}} = {{\$v}}
    {{end}}
    {{ end }}
